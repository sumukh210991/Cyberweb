# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1468724228.737739
_enable_loop = True
_template_filename = '/home/sumukh/Documents/thesis/Cyberweb/cyberweb/cyberweb/templates/about.mako'
_template_uri = '/about.mako'
_source_encoding = 'utf-8'
from webhelpers.html import escape
_exports = ['header', 'col2main', 'col2right', 'footer']


def _mako_get_namespace(context, name):
    try:
        return context.namespaces[(__name__, name)]
    except KeyError:
        _mako_generate_namespaces(context)
        return context.namespaces[(__name__, name)]
def _mako_generate_namespaces(context):
    pass
def _mako_inherit(template, context):
    _mako_generate_namespaces(context)
    return runtime._inherit_from(context, u'/2col.mako', _template_uri)
def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        __M_writer = context.writer()
        __M_writer(u'\n')
        __M_writer(u'\n\n')
        __M_writer(u'\n\n')
        __M_writer(u'\n\n\n')
        __M_writer(u'\n\n')
        __M_writer(u'\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_header(context):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_writer = context.writer()
        __M_writer(u'\n    "This is the header."\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_col2main(context):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_writer = context.writer()
        __M_writer(u'\n<blockquote>\n<h3>Coastal Ocean Dynamics Group</h3>\n<p>\nIn this project, we are developing a set of Web services and an Ocean Science Education Portal that will allow users to view coastal and ocean processes, to place trackers and follow flows along the San Diego Bay and near-shore coastlines, and to model data for other ocean and weather forecasting sytems. This includes programs such as the Southern California Coastal Ocean Observing System (SCCOOS), which is designed to deliver continuous and real-time data, generated by a broad suite of system components that monitor the ocean on a range of space and time scales, to state and local agencies concerned with coastal water quality. This data is used by surfers to check out tides and by disaster response agencies who run weather forecasting models or tsunami wave alerts. \n\nPrimary research projects include:\n<blockquote>\n<ul>\n<li> The General Curvilinear Ocean (GCOM) Models, applied to different regions. </li>\n<li> Coupled GCOM/Biogeochemical Models </li>\n<li> GCOM Computational Environment Development </li>\n</ul>\n</blockquote>\n\n\nThe research group is an international partnership, including members from: \n\n<blockquote>\n<ul>\n<li>[http://www.csrc.sdsu.edu/csrc/| The Computational Science Research Center (CSRC)] at SDSU</li>\n<li>[http://cs.sdsu.edu| The Department of Computer Science], [http://acel.sdsu.edu| Advanced Computing Environments Lab], at SDSU</li>\n<li>[http://www.chors.sdsu.edu/| The Center for Hydro-Optics & Remote Sensing (CHORS)] at SDSU</li>\n<li>[http://iio.ens.uabc.mx| The Instituto de Investigaciones Oceanologicas], Universidad Autonoma de Baja California, Mexico</li>\n<li>[http://alfa.facyt.uc.edu.ve| The Multidisciplinary Center of Scientific Visualization and Computing (CEMVICC)], Universidad de Carabobo, Valencia,Venezuela.</li>\n</ul>\n</blockquote>\n\n</blockquote>\n\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_col2right(context):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_writer = context.writer()
        __M_writer(u'\n<h3> </h3>\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_footer(context):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_writer = context.writer()
        __M_writer(u'\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"source_encoding": "utf-8", "line_map": {"64": 45, "33": 2, "34": 3, "35": 7, "36": 10, "37": 43, "38": 47, "74": 9, "44": 5, "78": 9, "48": 5, "84": 78, "54": 13, "68": 45, "58": 13, "28": 0}, "uri": "/about.mako", "filename": "/home/sumukh/Documents/thesis/Cyberweb/cyberweb/cyberweb/templates/about.mako"}
__M_END_METADATA
"""
